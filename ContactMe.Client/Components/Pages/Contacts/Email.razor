@page "/contacts/email/{contactId:int}"
@rendermode InteractiveAuto
@using ContactMe.Client.Helpers
@using ContactMe.Client.Services.Interfaces

@attribute [Authorize]

@inject IContactDTOService ContactService
@inject NavigationManager Nav

<PageTitle>ContactMe | Email Contact</PageTitle>

<div class="card shadow-lg my-3">
    <div class="card-body">
        @if (emailData is not null)
        {
            <EmailForm EmailData="emailData" OnSubmit="HandleSubmit" />
        }
    </div>
</div>

@code {
    #region parameters
    [Parameter]
    public int ContactId { get; set; }

    [CascadingParameter]
    private Task<AuthenticationState>? AuthStateTask { get; set; }
    #endregion

    #region state
    private EmailData? emailData;
    private ContactDTO? contact;
    private UserInfo? userInfo;
    #endregion

    #region methods
    protected override async Task OnInitializedAsync()
    {
        try
        {
            userInfo = await UserInfoHelper.GetUserInfoAsync(AuthStateTask);
            contact = await ContactService.GetContactByIdAsync(ContactId, userInfo!.UserId);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

        if (contact is null)
        {
            Nav.NavigateTo("contacts");
        }
        else
        {
            emailData = new EmailData()
                {
                    Recipients = contact.Email,
                };
        }
    }

    private async Task HandleSubmit()
    {
        string message = $"Something went wrong sending your email to {contact?.FullName}. Please try again later.";
        try
        {
            bool success = await ContactService.EmailContactAsync(ContactId, emailData!, userInfo!.UserId);

            if (success)
            {
                message = $"Email successfully sent to {contact?.FullName}!";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex);
        }

        Nav.NavigateTo($"contacts?message={message}");

    }
    #endregion

}
